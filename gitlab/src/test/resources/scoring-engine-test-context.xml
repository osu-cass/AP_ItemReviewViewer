<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<import resource="classpath:opentestsystem.shared.common-common-context-module.xml"/>
		                    
	<!-- Environment property placeholder configurer loads properties from JVM system properties and from environment variables -->
	<context:property-placeholder
	    ignore-unresolvable="true"
	    order="100"
	    local-override="true"/>
	    
	<!-- Load local override properties (Defaults to "${user.home}/opentestsystem-override-properties.xml") -->
	<context:property-placeholder
	    ignore-unresolvable="true"
	    ignore-resource-not-found="true"
	    order="120"
	    location="${opentestsystem-override-properties:file:///${user.home}/opentestsystem-override-properties.xml}"/>
	
	<!-- Load default properties from classpath -->
	<context:property-placeholder
	    ignore-unresolvable="true"
	    order="1000"
	    location="classpath:opentestsystem.shared.common-default-properties.xml"/>
	    
	<!-- Main configuration data store -->
	<bean id="configurationManager"
	      class="AIR.Common.Configuration.ConfigurationManager"/>
	
	<!-- Component of configuration manager that stores application settings -->
	<bean id="appSettings"
	      factory-bean="configurationManager"
	      factory-method="getAppSettings"/>


	<!-- We won't use the bean returned here, which is just another reference 
		to the appSettings bean. We are using this declaration to append application 
		setting values. That's why it is anonymous -->
	<bean factory-bean="appSettings"
	      factory-method="updateProperties"
	      lazy-init="false"> 
		<constructor-arg>
			<util:map map-class="java.util.HashMap">
				<entry key="IsFirebugLiteEnabled" value="${IsFirebugLiteEnabled}" />
				<entry key="IsCheckinSite" value="${IsCheckinSite}" />
				<entry key="DONOT_Distributed" value="${DONOT_Distributed}" />
				<entry key="ClientName" value="${ClientName}" />
				<entry key="ClientQueryString" value="${ClientQueryString}" />
				<entry key="Appkey" value="${Appkey}" />
				<entry key="EncryptedPassword" value="${EncryptedPassword}" />
				<entry key="RecordSystemClient" value="${RecordSystemClient}" />
				<entry key="AdminPassword" value="${AdminPassword}" />
				<entry key="AppName" value="${AppName}" />
				<entry key="SessionType" value="${SessionType}" />
				<entry key="Debug.AllowFTP" value="${Debug.AllowFTP}" />
				<entry key="EncryptionKey" value="${EncryptionKey}" />
				<entry key="testScoring.logDebug" value="false" />
				<entry key="testScoring.logError" value="false" />
				<entry key="isCLSLogin" value="true"/>
			</util:map>
		</constructor-arg>
	</bean>
	
	<bean id="fileFtpHandler" class="AIR.Common.Web.FileFtpHandler" />
	<bean id="iEncryption" class="TDS.Shared.Web.Encryption"/>
	<context:property-placeholder location="classpath:settings-mysql.xml" ignore-unresolvable="true" order="900" local-override="true" />
	
	
</beans>
